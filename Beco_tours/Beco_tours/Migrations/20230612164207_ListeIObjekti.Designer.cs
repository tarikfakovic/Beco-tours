// <auto-generated />
using System;
using Beco_tours.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Beco_tours.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230612164207_ListeIObjekti")]
    partial class ListeIObjekti
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Beco_tours.Models.Lokacija", b =>
                {
                    b.Property<int>("LokacijaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Adresa")
                        .HasColumnType("longtext");

                    b.Property<string>("Grad")
                        .HasColumnType("longtext");

                    b.Property<string>("Naziv")
                        .HasColumnType("longtext");

                    b.HasKey("LokacijaID");

                    b.ToTable("Lokacije");
                });

            modelBuilder.Entity("Beco_tours.Models.Putnik", b =>
                {
                    b.Property<int>("PutnikID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Adresa")
                        .HasColumnType("longtext");

                    b.Property<int>("Godine")
                        .HasColumnType("int");

                    b.Property<string>("Ime")
                        .HasColumnType("longtext");

                    b.Property<string>("Prezime")
                        .HasColumnType("longtext");

                    b.Property<string>("Telefon")
                        .HasColumnType("longtext");

                    b.HasKey("PutnikID");

                    b.ToTable("Putnike");
                });

            modelBuilder.Entity("Beco_tours.Models.Rezervacija", b =>
                {
                    b.Property<int>("RezervacijaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Cena")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("PovratnaKarta")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("PutnikID")
                        .HasColumnType("int");

                    b.Property<int>("TuraID")
                        .HasColumnType("int");

                    b.HasKey("RezervacijaID");

                    b.HasIndex("PutnikID");

                    b.HasIndex("TuraID");

                    b.ToTable("Rezervacije");
                });

            modelBuilder.Entity("Beco_tours.Models.Tura", b =>
                {
                    b.Property<int>("TuraID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("PolaznaLokacijaID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("VozacID")
                        .HasColumnType("int");

                    b.Property<int>("VoziloID")
                        .HasColumnType("int");

                    b.Property<DateTime>("VremePolaska")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("VremeStizanja")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("VremeUkrcavanja")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ZavrsnaLokacijaID")
                        .HasColumnType("int");

                    b.HasKey("TuraID");

                    b.HasIndex("PolaznaLokacijaID");

                    b.HasIndex("VozacID");

                    b.HasIndex("VoziloID");

                    b.HasIndex("ZavrsnaLokacijaID");

                    b.ToTable("Ture");
                });

            modelBuilder.Entity("Beco_tours.Models.Vozac", b =>
                {
                    b.Property<int>("VozacID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Godine")
                        .HasColumnType("int");

                    b.Property<string>("Ime")
                        .HasColumnType("longtext");

                    b.Property<string>("Kategorija")
                        .HasColumnType("longtext");

                    b.Property<string>("Telefon")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ZaposljenAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("VozacID");

                    b.ToTable("Vozace");
                });

            modelBuilder.Entity("Beco_tours.Models.Vozilo", b =>
                {
                    b.Property<int>("VoziloID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Boja")
                        .HasColumnType("longtext");

                    b.Property<string>("Brend")
                        .HasColumnType("longtext");

                    b.Property<int>("BrojSedista")
                        .HasColumnType("int");

                    b.Property<string>("Tip")
                        .HasColumnType("longtext");

                    b.HasKey("VoziloID");

                    b.ToTable("Vozila");
                });

            modelBuilder.Entity("Beco_tours.Models.Rezervacija", b =>
                {
                    b.HasOne("Beco_tours.Models.Putnik", "Putnik")
                        .WithMany()
                        .HasForeignKey("PutnikID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Beco_tours.Models.Tura", "Tura")
                        .WithMany()
                        .HasForeignKey("TuraID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Putnik");

                    b.Navigation("Tura");
                });

            modelBuilder.Entity("Beco_tours.Models.Tura", b =>
                {
                    b.HasOne("Beco_tours.Models.Lokacija", "PolaznaLokacija")
                        .WithMany()
                        .HasForeignKey("PolaznaLokacijaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Beco_tours.Models.Vozac", "Vozac")
                        .WithMany()
                        .HasForeignKey("VozacID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Beco_tours.Models.Vozilo", "Vozilo")
                        .WithMany()
                        .HasForeignKey("VoziloID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Beco_tours.Models.Lokacija", "ZavrsnaLokacija")
                        .WithMany()
                        .HasForeignKey("ZavrsnaLokacijaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PolaznaLokacija");

                    b.Navigation("Vozac");

                    b.Navigation("Vozilo");

                    b.Navigation("ZavrsnaLokacija");
                });
#pragma warning restore 612, 618
        }
    }
}
